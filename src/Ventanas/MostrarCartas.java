/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import java.awt.Dimension;
import java.awt.Image;
import java.util.List;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author chepe
 */
public class MostrarCartas extends javax.swing.JFrame {

    /**
     * Creates new form MostrarCartas1
     */
    public MostrarCartas(int cantidad) {
        initComponents();
        barajear();
        mostrarCartas(cantidad);
        this.cantidad = cantidad;
    }

    private MostrarCartas() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mostrador = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Slecccion de carta");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jButton2.setText("Jugar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        mostrador.setForeground(new java.awt.Color(255, 255, 255));
        mostrador.setPreferredSize(new java.awt.Dimension(888, 461));

        javax.swing.GroupLayout mostradorLayout = new javax.swing.GroupLayout(mostrador);
        mostrador.setLayout(mostradorLayout);
        mostradorLayout.setHorizontalGroup(
            mostradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 888, Short.MAX_VALUE)
        );
        mostradorLayout.setVerticalGroup(
            mostradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 467, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(mostrador);

        jLabel1.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
        jLabel1.setText("Visualice la carta a ser adivinada");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("frame");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Truco truco = new Truco(cantidad);
        //truco.setVisible(true);
        this.dispose();
        truco.vacio();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MostrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MostrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MostrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MostrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MostrarCartas().setVisible(true);
            }
        });
    }

    //declarando el arreglo que contedra las cartas
    public static List<Integer> cartas = new ArrayList<Integer>();
    int cantidad = 0;
    
    public void barajear() {
        //limpiando el arreglo
        cartas.clear();

        //generando el barajeo hasta que el arreglo tenga 99 cartas
        while (cartas.size() < 99) {
            //generando una carta random
            int carta = (int) (Math.random() * 100);

            //validando que la carta no se encuentre en el arreglo
            if (cartas.contains(carta) == false) {
                if (carta > 0) {
                    cartas.add(carta);
                }
            }
        }
    }

    public void mostrarCartas(int cantidad) {
        //variable con la posicion inicial en X de la primer carta
        int x = 20;
        
        //recorrido para mostrar la cantidad de cartas selecciondas
        for (int i = 0; i < cantidad; i++) {
            
            //obteniendo el nombre de la primer carta de la baraja 
            int elemento = cartas.get(i);
            
            //obteniendo la imagen correspondiente a la carta de la baraja
            Image imagen = new ImageIcon(getClass().getResource("/imagenes/" + elemento + ".jpg")).getImage();
            
            //redimensionando la imagen
            imagen = imagen.getScaledInstance(275, 400, Image.SCALE_SMOOTH);
            
            //creando el icono de la imagen para agregarla a la etiqueta
            ImageIcon ima = new ImageIcon(imagen);
            
            //creaando la etiqueta que tendra la imagen de la carta
            JLabel carta = new JLabel();
            
            //agregando la posicion, el tamaño y la imagen a la etiqueta
            carta.setBounds(x, 25, 275, 400);
            carta.setIcon(ima);
            
            //agregando la etiqueta al panel
            mostrador.add(carta);
            
            //modificando la posicion inicial de la siguiente carta
            x += 285;
        }
        //redimensionando el tamaño del panel respecto a la cantidad de cartas que tiene
        mostrador.setPreferredSize(new Dimension(x,461));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mostrador;
    // End of variables declaration//GEN-END:variables
}
